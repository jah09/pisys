
name: Deploy to Vercel (dev) on PR approval or merge to dev

on:
  pull_request_review:
    types: [submitted]
  push:
    branches:
      - dev

permissions:
  contents: read
  pull-requests: read

jobs:
  deploy-on-pr-approval:
    if: >
      github.event_name == 'pull_request_review' &&
      github.event.review.state == 'approved' &&
      github.event.pull_request.base.ref == 'dev' &&
      github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch (supports forks)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Vercel (preview for PR)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # preview deployment (do not pass --prod)
          npx vercel --token "$VERCEL_TOKEN" --confirm

  deploy-on-dev-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dev
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Vercel (dev)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # deploy to your dev environment (non-prod)
          npx vercel --token "$VERCEL_TOKEN" --confirm
